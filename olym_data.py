# -*- coding: utf-8 -*-
"""olym data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WPvxTrIZoRrc9Bmn1GyTpte8q3yBHUhI
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

athletes = pd.read_csv("/content/athlete_events.csv")
region = pd.read_csv("/content/noc_regions.csv")

athletes.head()

region.head()

athletes_df = athletes.merge(region,how = "left",on = "NOC")
athletes_df.head()

athletes_df.rename(columns={"region":"Region","notes":"Notes"},inplace = True)

athletes_df.head()

athletes_df.info()

athletes_df.describe()

nan_values = athletes_df.isna()
nan_columns = nan_values.any()
nan_columns

athletes_df.isnull().sum()

athletes_df.query("Team == 'India'").head(5)

athletes_df.query("Team == 'Japan'").head(5)

top_10_countries = athletes_df.Team.value_counts().sort_values(ascending = False).head(10)
top_10_countries

plt.figure(figsize=(12,6))
plt.title("Overall Participation by Countries")
sns.barplot(x=top_10_countries.index,y = top_10_countries,palette="Set2")

plt.figure(figsize=(12,6))
plt.title("Age distrubution of the athletes")
plt.xlabel("Age")
plt.ylabel("Number of participants")
plt.hist(athletes_df['Age'], bins=np.arange(10, 80, 2), color="orange", edgecolor="white")

winter_sports = athletes_df[athletes_df.Season=="Winter"].Sport.unique()
winter_sports

summer_sports = athletes_df[athletes_df.Season=="Summer"].Sport.unique()
summer_sports

gender_counts = athletes_df.Sex.value_counts()
gender_counts

plt.figure(figsize=(12,6))
plt.title("Gender Distribution")
plt.pie(gender_counts,labels=gender_counts.index,autopct="%1.1f%%",startangle=150,shadow = True)

athletes_df.Medal.value_counts()

female_partipipants = athletes_df[(athletes_df.Sex=="F") & (athletes_df.Season=="Summer")][["Sex","Year"]]
female_partipipants = female_partipipants.groupby("Year").count().reset_index()
female_partipipants.head()

womenOlympics = athletes_df[(athletes_df.Sex=="F")&(athletes_df.Season=="Summer")]

sns.set(style="darkgrid")
plt.figure(figsize=(20,10))
sns.countplot(x="Year",data=womenOlympics,palette="Spectral")
plt.title("Women Participation")

part = womenOlympics.groupby("Year")["Sex"].value_counts()
plt.figure(figsize=(20,10))
part.loc[:,"F"].plot()
plt.title("Plot of Female Athletes over time")

goldMedals = athletes_df[(athletes_df.Medal == "Gold")]
goldMedals.head()

goldMedals = goldMedals[np.isfinite(goldMedals["Age"])]
goldMedals["ID"][goldMedals["Age"] > 60].count()

sporting_event = goldMedals["Sport"][goldMedals["Age"]>60]
sporting_event

plt.figure(figsize=(10,5))
plt.tight_layout()
sns.countplot(sporting_event)
plt.title("Gold Medals for athletes over 60 years")

goldMedals.Region.value_counts().reset_index(name="Medal").head(5)

totalGoldMedals = goldMedals.Region.value_counts().reset_index(name="Medal").head(5)
g = sns.catplot(x="index",y="Medal",data=totalGoldMedals,
                height = 5,kind = "bar",palette = "rocket")
g.despine(left = True)
g.set_xlabels("Top 5 countries")
g.set_ylabels("Number of Medals")
plt.title("Gold Medals per country")

max_year = athletes_df.Year.max()
team_names = athletes_df[(athletes_df.Year == max_year) & (athletes_df.Medal == "Gold")].Team
team_names.value_counts().head(10)

sns.barplot(x=team_names.value_counts().head(20),y = team_names.value_counts().head(20).index)
plt.ylabel(None);
plt.xlabel("Countrywise Medals for the year 2016")

not_null_medals = athletes_df[(athletes_df["Height"].notnull()) & (athletes_df["Weight"].notnull())]

plt.figure(figsize=(12,10))
axis = sns.scatterplot(x="Height",y="Weight",data=not_null_medals,hue="Sex")
plt.title("Height vs Weight of Olympic Medalists")